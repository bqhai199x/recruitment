@page "/login"
@inject HttpClient Http
@inject IJSRuntime jsr

<h3>Login</h3>

<p>@Message</p>

<EditForm Model="User" OnValidSubmit="OnValid" style="max-width:500px;">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<InputText class="form-control" @bind-Value="User.Email" placeholder="Enter Email"></InputText>
	</div>
	<div class="mb-2">
		<InputText type="password" class="form-control" @bind-Value="User.Password" placeholder="Enter Password"></InputText>
	</div>
	<div class="mb-2 text-right">
		<button class="btn btn-secondary" disabled="@IsDisabled">Login</button>
	</div>
</EditForm>

@code {
	private LoginModel User { get; set; } = new();

	private string Message { get; set; } = string.Empty;

	private bool IsDisabled { get; set; } = false;

	private async Task OnValid()
	{
		IsDisabled = true;
		using (var msg = await Http.PostAsJsonAsync<LoginModel>("/api/auth/login", User, System.Threading.CancellationToken.None))
		{
			if (msg.IsSuccessStatusCode)
			{
				LoginResult result = await msg.Content.ReadFromJsonAsync<LoginResult>();
				Message = result.Message;
				IsDisabled = false;
				if (result.Success)
					await jsr.InvokeVoidAsync("localStorage.setItem", "user", $"{result.Email};{result.JwtBearer}").ConfigureAwait(false);
			}
		}
	}
}